apply plugin: 'com.android.application'

android {
    compileSdkVersion 34
    namespace 'cn.leiax00.app'
    defaultConfig {
        applicationId "cn.leiax00.app.szuni"
        minSdkVersion 24
        targetSdkVersion 34
        //建议此属性值设为21 io.dcloud.PandoraEntry 作为apk入口时   必须设置 targetSDKVersion>=21 沉浸式才生效

        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        ndk {
            abiFilters 'x86', 'armeabi-v7a'
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    signingConfigs {
        config {
            keyAlias '__uni__5abccc0'
            keyPassword 'Db51Bezl'
            storeFile file('key.keystore')
            storePassword 'Db51Bezl'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.config
            zipAlignEnabled false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.config
            zipAlignEnabled false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //使用uniapp时，需复制下面代码
    /*代码开始*/
    aaptOptions {
        additionalParameters '--auto-add-overlay'
        //noCompress 'foo', 'bar'
        ignoreAssetsPattern "!.svn:!.git:.*:!CVS:!thumbs.db:!picasa.ini:!*.scc:*~"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    /*代码结束*/
    applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.buildType.name == "debug") {
                // 设置 APK 名称 -- 自定义基座用: assembleDebug / aa_BuildCustomAppBase
                outputFileName = "android_${variant.name}.apk"
            }
            if (variant.buildType.name == "release") {
                def currentTime = new Date().format("yyyyMMdd_HHmmss")
                // 设置 APK 名称 -- 正式本地打包: generated apk
                outputFileName = "wesim_v${android.defaultConfig.versionName}_${currentTime}.apk"
            }
        }
    }
}
repositories {
    flatDir {
        dirs 'libs'
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    debugImplementation fileTree(dir: '../libs', include: ['debug-server-release.aar'])

    /*uniapp所需库-----------------------开始*/
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.facebook.fresco:fresco:1.13.0'
    implementation "com.facebook.fresco:animated-gif:1.13.0"
    /*uniapp所需库-----------------------结束*/
    // 基座需要，必须添加
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.alibaba:fastjson:1.2.83'
    implementation 'androidx.webkit:webkit:1.3.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'androidx.core:core:1.1.0'
    implementation "androidx.fragment:fragment:1.1.0"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    // 添加uni-app插件
    implementation project(':uniplugin_component')
    implementation project(':uniplugin_module')
    implementation project(':uniplugin_richalert')
    // uts原生插件
    implementation project(':uts-toast')
    // uts依赖
    implementation "com.squareup.okhttp3:okhttp:3.12.12"
    implementation "androidx.core:core-ktx:1.6.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.8.10"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8"
    implementation "com.github.getActivity:XXPermissions:18.0"
}

tasks.register('aa_BuildCustomAppBase', Copy) {
    dependsOn "assembleDebug"
    from 'build/outputs/apk/debug/' // 这里指定编译产物的源目录，根据你的项目结构进行调整
    into '../../../../sz-uni/unpackage/debug/'       // 这里指定目标目录，即你想要拷贝到的目录，替换为实际的目录路径

    // 可选配置，例如指定拷贝的文件名
    include '*.apk'

    // 可选配置，例如排除特定的文件
//    exclude '**/unwanted_file.apk'
}